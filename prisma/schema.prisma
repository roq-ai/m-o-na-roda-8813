generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model car {
  id            String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  mileage       Int
  purchase_date DateTime   @db.Date
  car_model_id  String?    @db.Uuid
  user_id       String?    @db.Uuid
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  car_model     car_model? @relation(fields: [car_model_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model car_maker {
  id         String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String      @db.VarChar(255)
  user_id    String?     @db.Uuid
  created_at DateTime    @default(now()) @db.Timestamp(6)
  updated_at DateTime    @default(now()) @db.Timestamp(6)
  user       user?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  car_model  car_model[]
}

model car_model {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name         String     @db.VarChar(255)
  year         Int
  car_maker_id String?    @db.Uuid
  user_id      String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  car          car[]
  car_maker    car_maker? @relation(fields: [car_maker_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model car_shop {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String        @db.VarChar(255)
  organization_id String?       @db.Uuid
  user_id         String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?    @db.VarChar(255)
  image       String?    @db.VarChar(255)
  name        String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  user_id     String     @db.Uuid
  tenant_id   String     @db.VarChar(255)
  car_shop    car_shop[]
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  car          car[]
  car_maker    car_maker[]
  car_model    car_model[]
  car_shop     car_shop[]
  organization organization[]
}
